// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		1125DD59164BEE2A00FE636B /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1125DD58164BEE2A00FE636B /* Foundation.framework */; };
		1125DD74164BEE4E00FE636B /* MPCJSONDataSerializer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1125DD6A164BEE4E00FE636B /* MPCJSONDataSerializer.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		1125DD75164BEE4E00FE636B /* MPCJSONSerializer.m in Sources */ = {isa = PBXBuildFile; fileRef = 1125DD6C164BEE4E00FE636B /* MPCJSONSerializer.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		1125DD76164BEE4E00FE636B /* MPCSerializedJSONData.m in Sources */ = {isa = PBXBuildFile; fileRef = 1125DD6E164BEE4E00FE636B /* MPCSerializedJSONData.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		1125DD77164BEE4E00FE636B /* NSData+MPBase64.m in Sources */ = {isa = PBXBuildFile; fileRef = 1125DD71164BEE4E00FE636B /* NSData+MPBase64.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		1125DD78164BEE4E00FE636B /* Mixpanel.m in Sources */ = {isa = PBXBuildFile; fileRef = 1125DD73164BEE4E00FE636B /* Mixpanel.m */; settings = {COMPILER_FLAGS = "-fno-objc-arc"; }; };
		1125DD7A164BEE6800FE636B /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1125DD79164BEE6800FE636B /* UIKit.framework */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		1125DD53164BEE2A00FE636B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "include/${PRODUCT_NAME}";
			dstSubfolderSpec = 16;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		1125DD55164BEE2A00FE636B /* libMixPanelBinding.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libMixPanelBinding.a; sourceTree = BUILT_PRODUCTS_DIR; };
		1125DD58164BEE2A00FE636B /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		1125DD5C164BEE2A00FE636B /* MixPanelBinding-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "MixPanelBinding-Prefix.pch"; sourceTree = "<group>"; };
		1125DD69164BEE4E00FE636B /* MPCJSONDataSerializer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MPCJSONDataSerializer.h; sourceTree = "<group>"; };
		1125DD6A164BEE4E00FE636B /* MPCJSONDataSerializer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MPCJSONDataSerializer.m; sourceTree = "<group>"; };
		1125DD6B164BEE4E00FE636B /* MPCJSONSerializer.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MPCJSONSerializer.h; sourceTree = "<group>"; };
		1125DD6C164BEE4E00FE636B /* MPCJSONSerializer.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MPCJSONSerializer.m; sourceTree = "<group>"; };
		1125DD6D164BEE4E00FE636B /* MPCSerializedJSONData.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = MPCSerializedJSONData.h; sourceTree = "<group>"; };
		1125DD6E164BEE4E00FE636B /* MPCSerializedJSONData.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = MPCSerializedJSONData.m; sourceTree = "<group>"; };
		1125DD70164BEE4E00FE636B /* NSData+MPBase64.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSData+MPBase64.h"; sourceTree = "<group>"; };
		1125DD71164BEE4E00FE636B /* NSData+MPBase64.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSData+MPBase64.m"; sourceTree = "<group>"; };
		1125DD72164BEE4E00FE636B /* Mixpanel.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Mixpanel.h; sourceTree = "<group>"; };
		1125DD73164BEE4E00FE636B /* Mixpanel.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = Mixpanel.m; sourceTree = "<group>"; };
		1125DD79164BEE6800FE636B /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		1125DD52164BEE2A00FE636B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1125DD7A164BEE6800FE636B /* UIKit.framework in Frameworks */,
				1125DD59164BEE2A00FE636B /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		1125DD4A164BEE2A00FE636B = {
			isa = PBXGroup;
			children = (
				1125DD5A164BEE2A00FE636B /* MixPanelBinding */,
				1125DD57164BEE2A00FE636B /* Frameworks */,
				1125DD56164BEE2A00FE636B /* Products */,
			);
			sourceTree = "<group>";
		};
		1125DD56164BEE2A00FE636B /* Products */ = {
			isa = PBXGroup;
			children = (
				1125DD55164BEE2A00FE636B /* libMixPanelBinding.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		1125DD57164BEE2A00FE636B /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				1125DD79164BEE6800FE636B /* UIKit.framework */,
				1125DD58164BEE2A00FE636B /* Foundation.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		1125DD5A164BEE2A00FE636B /* MixPanelBinding */ = {
			isa = PBXGroup;
			children = (
				1125DD66164BEE4E00FE636B /* Mixpanel */,
				1125DD5B164BEE2A00FE636B /* Supporting Files */,
			);
			path = MixPanelBinding;
			sourceTree = "<group>";
		};
		1125DD5B164BEE2A00FE636B /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				1125DD5C164BEE2A00FE636B /* MixPanelBinding-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		1125DD66164BEE4E00FE636B /* Mixpanel */ = {
			isa = PBXGroup;
			children = (
				1125DD67164BEE4E00FE636B /* Library */,
				1125DD72164BEE4E00FE636B /* Mixpanel.h */,
				1125DD73164BEE4E00FE636B /* Mixpanel.m */,
			);
			path = Mixpanel;
			sourceTree = "<group>";
		};
		1125DD67164BEE4E00FE636B /* Library */ = {
			isa = PBXGroup;
			children = (
				1125DD68164BEE4E00FE636B /* JSON */,
				1125DD6F164BEE4E00FE636B /* NSData_Base64 */,
			);
			path = Library;
			sourceTree = "<group>";
		};
		1125DD68164BEE4E00FE636B /* JSON */ = {
			isa = PBXGroup;
			children = (
				1125DD69164BEE4E00FE636B /* MPCJSONDataSerializer.h */,
				1125DD6A164BEE4E00FE636B /* MPCJSONDataSerializer.m */,
				1125DD6B164BEE4E00FE636B /* MPCJSONSerializer.h */,
				1125DD6C164BEE4E00FE636B /* MPCJSONSerializer.m */,
				1125DD6D164BEE4E00FE636B /* MPCSerializedJSONData.h */,
				1125DD6E164BEE4E00FE636B /* MPCSerializedJSONData.m */,
			);
			path = JSON;
			sourceTree = "<group>";
		};
		1125DD6F164BEE4E00FE636B /* NSData_Base64 */ = {
			isa = PBXGroup;
			children = (
				1125DD70164BEE4E00FE636B /* NSData+MPBase64.h */,
				1125DD71164BEE4E00FE636B /* NSData+MPBase64.m */,
			);
			path = NSData_Base64;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		1125DD54164BEE2A00FE636B /* MixPanelBinding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1125DD63164BEE2A00FE636B /* Build configuration list for PBXNativeTarget "MixPanelBinding" */;
			buildPhases = (
				1125DD51164BEE2A00FE636B /* Sources */,
				1125DD52164BEE2A00FE636B /* Frameworks */,
				1125DD53164BEE2A00FE636B /* CopyFiles */,
				1125DD7E164BFC6700FE636B /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MixPanelBinding;
			productName = MixPanelBinding;
			productReference = 1125DD55164BEE2A00FE636B /* libMixPanelBinding.a */;
			productType = "com.apple.product-type.library.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		1125DD4C164BEE2A00FE636B /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0450;
				ORGANIZATIONNAME = "Alexander Kuznetsov";
			};
			buildConfigurationList = 1125DD4F164BEE2A00FE636B /* Build configuration list for PBXProject "MixPanelBinding" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 1125DD4A164BEE2A00FE636B;
			productRefGroup = 1125DD56164BEE2A00FE636B /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				1125DD54164BEE2A00FE636B /* MixPanelBinding */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		1125DD7E164BFC6700FE636B /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Version 2.0 (updated for Xcode 4, with some fixes)\n# Changes:\n#    - Works with xcode 4, even when running xcode 3 projects (Workarounds for apple bugs)\n#    - Faster / better: only runs lipo once, instead of once per recursion\n#    - Added some debugging statemetns that can be switched on/off by changing the DEBUG_THIS_SCRIPT variable to \"true\"\n#    - Fixed some typos\n#\n# Purpose:\n#   Create a static library for iPhone from within XCode\n#   Because Apple staff DELIBERATELY broke Xcode to make this impossible from the GUI (Xcode 3.2.3 specifically states this in the Release notes!)\n#   ...no, I don't understand why they did this!\n#\n# Author: Adam Martin - http://twitter.com/redglassesapps\n# Based on: original script from Eonil (main changes: Eonil's script WILL NOT WORK in Xcode GUI - it WILL CRASH YOUR COMPUTER)\n#\n# More info: see this Stack Overflow question: http://stackoverflow.com/questions/3520977/build-fat-static-library-device-simulator-using-xcode-and-sdk-4\n\n#################[ Tests: helps workaround any future bugs in Xcode ]########\n#\nDEBUG_THIS_SCRIPT=\"false\"\n\nif [ $DEBUG_THIS_SCRIPT = \"true\" ]\nthen\necho \"########### TESTS #############\"\necho \"Use the following variables when debugging this script; note that they may change on recursions\"\necho \"BUILD_DIR = $BUILD_DIR\"\necho \"BUILD_ROOT = $BUILD_ROOT\"\necho \"CONFIGURATION_BUILD_DIR = $CONFIGURATION_BUILD_DIR\"\necho \"BUILT_PRODUCTS_DIR = $BUILT_PRODUCTS_DIR\"\necho \"CONFIGURATION_TEMP_DIR = $CONFIGURATION_TEMP_DIR\"\necho \"TARGET_BUILD_DIR = $TARGET_BUILD_DIR\"\nfi\n\n#####################[ part 1 ]##################\n# First, work out the BASESDK version number (NB: Apple ought to report this, but they hide it)\n#    (incidental: searching for substrings in sh is a nightmare! Sob)\n\nSDK_VERSION=$(echo ${SDK_NAME} | grep -o '.\\{3\\}$')\n\n# Next, work out if we're in SIM or DEVICE\n\nif [ ${PLATFORM_NAME} = \"iphonesimulator\" ]\nthen\nOTHER_SDK_TO_BUILD=iphoneos${SDK_VERSION}\nelse\nOTHER_SDK_TO_BUILD=iphonesimulator${SDK_VERSION}\nfi\n\necho \"XCode has selected SDK: ${PLATFORM_NAME} with version: ${SDK_VERSION} (although back-targetting: ${IPHONEOS_DEPLOYMENT_TARGET})\"\necho \"...therefore, OTHER_SDK_TO_BUILD = ${OTHER_SDK_TO_BUILD}\"\n#\n#####################[ end of part 1 ]##################\n\n#####################[ part 2 ]##################\n#\n# IF this is the original invocation, invoke WHATEVER other builds are required\n#\n# Xcode is already building ONE target...\n#\n# ...but this is a LIBRARY, so Apple is wrong to set it to build just one.\n# ...we need to build ALL targets\n# ...we MUST NOT re-build the target that is ALREADY being built: Xcode WILL CRASH YOUR COMPUTER if you try this (infinite recursion!)\n#\n#\n# So: build ONLY the missing platforms/configurations.\n\nif [ \"true\" == ${ALREADYINVOKED:-false} ]\nthen\necho \"RECURSION: I am NOT the root invocation, so I'm NOT going to recurse\"\nelse\n# CRITICAL:\n# Prevent infinite recursion (Xcode sucks)\nexport ALREADYINVOKED=\"true\"\n\necho \"RECURSION: I am the root ... recursing all missing build targets NOW...\"\necho \"RECURSION: ...about to invoke: xcodebuild -configuration \\\"${CONFIGURATION}\\\" -target \\\"${TARGET_NAME}\\\" -sdk \\\"${OTHER_SDK_TO_BUILD}\\\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO\"\nxcodebuild -configuration \"${CONFIGURATION}\" -target \"${TARGET_NAME}\" -sdk \"${OTHER_SDK_TO_BUILD}\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\"\n\nACTION=\"build\"\n\n#Merge all platform binaries as a fat binary for each configurations.\n\n# Calculate where the (multiple) built files are coming from:\nCURRENTCONFIG_DEVICE_DIR=${SYMROOT}/${CONFIGURATION}-iphoneos\nCURRENTCONFIG_SIMULATOR_DIR=${SYMROOT}/${CONFIGURATION}-iphonesimulator\n\necho \"Taking device build from: ${CURRENTCONFIG_DEVICE_DIR}\"\necho \"Taking simulator build from: ${CURRENTCONFIG_SIMULATOR_DIR}\"\n\nCREATING_UNIVERSAL_DIR=${SYMROOT}/${CONFIGURATION}-universal\necho \"...I will output a universal build to: ${CREATING_UNIVERSAL_DIR}\"\n\n# ... remove the products of previous runs of this script\n#      NB: this directory is ONLY created by this script - it should be safe to delete!\n\nrm -rf \"${CREATING_UNIVERSAL_DIR}\"\nmkdir \"${CREATING_UNIVERSAL_DIR}\"\n\n#\necho \"lipo: for current configuration (${CONFIGURATION}) creating output file: ${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\"\nlipo -create -output \"${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_DEVICE_DIR}/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_SIMULATOR_DIR}/${EXECUTABLE_NAME}\"\n\n#########\n#\n# Added: StackOverflow suggestion to also copy \"include\" files\n#    (untested, but should work OK)\n#\nif [ -d \"${CURRENTCONFIG_DEVICE_DIR}/usr/local/include\" ]\nthen\nmkdir -p \"${CREATING_UNIVERSAL_DIR}/usr/local/include\"\n# * needs to be outside the double quotes?\ncp \"${CURRENTCONFIG_DEVICE_DIR}/usr/local/include/\"* \"${CREATING_UNIVERSAL_DIR}/usr/local/include\"\nfi\nfi";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		1125DD51164BEE2A00FE636B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1125DD74164BEE4E00FE636B /* MPCJSONDataSerializer.m in Sources */,
				1125DD75164BEE4E00FE636B /* MPCJSONSerializer.m in Sources */,
				1125DD76164BEE4E00FE636B /* MPCSerializedJSONData.m in Sources */,
				1125DD77164BEE4E00FE636B /* NSData+MPBase64.m in Sources */,
				1125DD78164BEE4E00FE636B /* Mixpanel.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		1125DD61164BEE2A00FE636B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				VALID_ARCHS = "armv7 armv7s i386";
			};
			name = Debug;
		};
		1125DD62164BEE2A00FE636B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
				VALID_ARCHS = "armv7 armv7s i386";
			};
			name = Release;
		};
		1125DD64164BEE2A00FE636B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DSTROOT = /tmp/MixPanelBinding.dst;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MixPanelBinding/MixPanelBinding-Prefix.pch";
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
			};
			name = Debug;
		};
		1125DD65164BEE2A00FE636B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DSTROOT = /tmp/MixPanelBinding.dst;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "MixPanelBinding/MixPanelBinding-Prefix.pch";
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		1125DD4F164BEE2A00FE636B /* Build configuration list for PBXProject "MixPanelBinding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1125DD61164BEE2A00FE636B /* Debug */,
				1125DD62164BEE2A00FE636B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		1125DD63164BEE2A00FE636B /* Build configuration list for PBXNativeTarget "MixPanelBinding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1125DD64164BEE2A00FE636B /* Debug */,
				1125DD65164BEE2A00FE636B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1125DD4C164BEE2A00FE636B /* Project object */;
}
